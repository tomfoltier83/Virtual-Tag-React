name: Development workflow

on:
  push:
      branches:
        - develop

# Here the environment variable is declared in workflow level
env:
  # Replace with your Orchestrator Values
  PROJECT_NAME: uipath.github.action
  PROJECT_FOLDER: ${{ github.action_path }}
  ORCH_URL: https://cloud.uipath.com/projerisvike/DEV/
  ORCH_TENANT: ${{ secrets.UIPATHTENANTNAME }}
  ORCH_CLIENT_ID: ${{ secrets.UIPATHCLIENTID }}
  ORCH_USER_KEY: ${{ secrets.UIPATHUSERKEY }}
  ORCH_ACC_NAME: ${{ secrets.UIPATHACCOUNTNAME }}

jobs:
  print-details:
    runs-on: ubuntu-latest
    steps:
      - name: echo-default-env-variables
        run: |
          echo "Home: ${HOME}"
          echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
          echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "GITHUB REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "GITHUB_REF: ${GITHUB_REF}"
  cleaner:
    runs-on: ubuntu-latest
    steps:
      - name: Runner workspace path
        run: |
          echo "Cleaning up previous run"
          rm -rf "${{ github.workspace }}"
  build-uipath-nuget-package:
    # You should be able to run on windows 2019 or windows latest
    needs: cleaner
    runs-on: windows-latest
    steps:
      - name: Check out repository code
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v2
      - name: Build Nuget Package
        shell: pwsh
        run: ${{ github.workspace }}\scripts\UipathPack.ps1 ${{ github.workspace }}\project.json -destination_folder ${{ github.workspace }}\package
      - name: Upload UiPath Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: |
           package/*.*
           scripts/*.ps1
  publish-uipath-nuget-package:
    needs: build-uipath-nuget-package
    runs-on: windows-latest
    steps:
      - name : Download UiPath Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Artifacts
      - name: Publish Nuget Package to DEV
        shell: pwsh
        run: ${{ github.workspace }}\scripts\UiPathDeploy.ps1 ${{ github.workspace }}\package ${{env.ORCH_URL}} ${{env.ORCH_TENANT}} -UserKey ${{env.ORCH_USER_KEY}} -account_name ${{env.ORCH_NAME_ACC}}

  test-uipath-published-package:
    needs: publish-uipath-nuget-package
    runs-on: windows-latest
    steps:
      - name: Download UiPath Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Artifacts
      - name: Test the Package With Test Cases
        run: ${{ github.workspace }}\scripts\\UiPathRunTest.ps1 ${{env.ORCH_URL}} ${{env.ORCH_TENANT}} -UserKey ${{env.ORCH_USER_KEY}} -account_name ${{env.ORCH_ACC_NAME}} -testset "TestSet1"

  # Create Pull Request for Merge & Review
  create-pull-request:
    needs: test-uipath-published-package
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: pull-request
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "master"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_label: "feature, automated pr"
          pr_title: "Pull Request From Github Action"

  # "notify" workflow for slack notification
  notify:
    name: Notify on Slack
    runs-on: ubuntu-latest
    # Only run this workflow when "build" workflow suceeds
    needs: [ test-uipath-published-package]
    # Only run this workflow if it target is main branch on pull_request event
    steps:
      - uses: abinoda/slack-action@master
        env:
          # required
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          # custom message to send to slack
          args: '{\"channel\":\"${{ secrets.SLACK_PR_CHANNEL_ID }}\",\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Pull Request:* ${{ github.event.pull_request.title }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Contributor :* ${{ github.event.pull_request.user.login }}\n*Request State:* ${{ github.event.pull_request.state }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"<${{ github.event.pull_request.html_url }}|View Pull Request>\"}}]}'
        # Pick up events even if the job is sucess.
        if: sucess()